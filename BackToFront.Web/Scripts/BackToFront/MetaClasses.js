var __BTF;
(function (__BTF) {
    (function (Meta) {
        (function (ExpressionWrapperType) {
            ExpressionWrapperType._map = [];
            ExpressionWrapperType.Binary = 1;
            ExpressionWrapperType.Constant = 2;
            ExpressionWrapperType.Member = 3;
            ExpressionWrapperType.MethodCall = 4;
            ExpressionWrapperType.Parameter = 5;
            ExpressionWrapperType.Unary = 6;
            ExpressionWrapperType.Default = 7;
            ExpressionWrapperType.Block = 8;
            ExpressionWrapperType.Conditional = 9;
            ExpressionWrapperType.Invocation = 10;
            ExpressionWrapperType.New = 11;
        })(Meta.ExpressionWrapperType || (Meta.ExpressionWrapperType = {}));
        var ExpressionWrapperType = Meta.ExpressionWrapperType;
        (function (ExpressionType) {
            ExpressionType._map = [];
            ExpressionType.Add = 0;
            ExpressionType.AddChecked = 1;
            ExpressionType.And = 2;
            ExpressionType.AndAlso = 3;
            ExpressionType.ArrayLength = 4;
            ExpressionType.ArrayIndex = 5;
            ExpressionType.Call = 6;
            ExpressionType.Coalesce = 7;
            ExpressionType.Conditional = 8;
            ExpressionType.Constant = 9;
            ExpressionType.Convert = 10;
            ExpressionType.ConvertChecked = 11;
            ExpressionType.Divide = 12;
            ExpressionType.Equal = 13;
            ExpressionType.ExclusiveOr = 14;
            ExpressionType.GreaterThan = 15;
            ExpressionType.GreaterThanOrEqual = 16;
            ExpressionType.Invoke = 17;
            ExpressionType.Lambda = 18;
            ExpressionType.LeftShift = 19;
            ExpressionType.LessThan = 20;
            ExpressionType.LessThanOrEqual = 21;
            ExpressionType.ListInit = 22;
            ExpressionType.MemberAccess = 23;
            ExpressionType.MemberInit = 24;
            ExpressionType.Modulo = 25;
            ExpressionType.Multiply = 26;
            ExpressionType.MultiplyChecked = 27;
            ExpressionType.Negate = 28;
            ExpressionType.UnaryPlus = 29;
            ExpressionType.NegateChecked = 30;
            ExpressionType.New = 31;
            ExpressionType.NewArrayInit = 32;
            ExpressionType.NewArrayBounds = 33;
            ExpressionType.Not = 34;
            ExpressionType.NotEqual = 35;
            ExpressionType.Or = 36;
            ExpressionType.OrElse = 37;
            ExpressionType.Parameter = 38;
            ExpressionType.Power = 39;
            ExpressionType.Quote = 40;
            ExpressionType.RightShift = 41;
            ExpressionType.Subtract = 42;
            ExpressionType.SubtractChecked = 43;
            ExpressionType.TypeAs = 44;
            ExpressionType.TypeIs = 45;
            ExpressionType.Assign = 46;
            ExpressionType.Block = 47;
            ExpressionType.DebugInfo = 48;
            ExpressionType.Decrement = 49;
            ExpressionType.Dynamic = 50;
            ExpressionType.Default = 51;
            ExpressionType.Extension = 52;
            ExpressionType.Goto = 53;
            ExpressionType.Increment = 54;
            ExpressionType.Index = 55;
            ExpressionType.Label = 56;
            ExpressionType.RuntimeVariables = 57;
            ExpressionType.Loop = 58;
            ExpressionType.Switch = 59;
            ExpressionType.Throw = 60;
            ExpressionType.Try = 61;
            ExpressionType.Unbox = 62;
            ExpressionType.AddAssign = 63;
            ExpressionType.AndAssign = 64;
            ExpressionType.DivideAssign = 65;
            ExpressionType.ExclusiveOrAssign = 66;
            ExpressionType.LeftShiftAssign = 67;
            ExpressionType.ModuloAssign = 68;
            ExpressionType.MultiplyAssign = 69;
            ExpressionType.OrAssign = 70;
            ExpressionType.PowerAssign = 71;
            ExpressionType.RightShiftAssign = 72;
            ExpressionType.SubtractAssign = 73;
            ExpressionType.AddAssignChecked = 74;
            ExpressionType.MultiplyAssignChecked = 75;
            ExpressionType.SubtractAssignChecked = 76;
            ExpressionType.PreIncrementAssign = 77;
            ExpressionType.PreDecrementAssign = 78;
            ExpressionType.PostIncrementAssign = 79;
            ExpressionType.PostDecrementAssign = 80;
            ExpressionType.TypeEqual = 81;
            ExpressionType.OnesComplement = 82;
            ExpressionType.IsTrue = 83;
            ExpressionType.IsFalse = 84;
        })(Meta.ExpressionType || (Meta.ExpressionType = {}));
        var ExpressionType = Meta.ExpressionType;
    })(__BTF.Meta || (__BTF.Meta = {}));
    var Meta = __BTF.Meta;
})(__BTF || (__BTF = {}));
